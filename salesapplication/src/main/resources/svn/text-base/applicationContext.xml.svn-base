<?xml version="1.0" encoding="UTF-8"?>
	<!--
		- Middle tier application context definition for the image database.
	-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>jdbc.properties</value>              
            </list>
        </property>
    </bean>
	<!--
		Configurer that replaces ${...} placeholders with values from a
		properties file
	-->
	<!--
		(in this case, JDBC-related settings for the dataSource definition
		below)

	<context:property-placeholder
		location="jdbc.properties" />	-->

	<!--org.springframework.jdbc.datasource.DriverManagerDataSource-->
	<!--
		<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
	-->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
	


	<!-- MailSender implementation for JavaMail -->
	<!--
		Used by ListImagesQuartzJob and ListImagesTimerTask; see
		"scheduling-*.xml"
	-->

	<!-- LobHandler for well-behaved JDBC drivers -->
	<!--
		(simply delegating to corresponding PreparedStatement and ResultSet
		methods)
	-->
	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<!-- LobHandler for Oracle JDBC drivers -->
	<!--
		(refers to the NativeJdbcExtractor above to get access to native
		OracleConnections)
	-->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
	</bean>

	<!-- NativeJdbcExtractor for the C3P0 connection pool above -->
	<!-- (just needed for oracleLobHandler) -->
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"
		lazy-init="true" />

</beans>
